version: '2.1'

services:
  # producer:
  #   build: .
  #   depends_on:
  #     - kafka1
  #   command: python3 producer.py
  
  # consumer: 
  #   build: .
  #   depends_on:
  #     - producer
  #     - kafka1
  #   command: python3 consumer.py
  client: 
    build: .
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    command: python3 client.py

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      # KAFKA_ADVERTISED_LISTENERS: 
      # Define las direcciones de los listeners que estaran expuestas para cada proposito especifico
      # ----------------------------------------------------------------------------------------------
      # INTERNAL: Para la comunicacion interna entre brokers
      # (kafka1:19092) - kafka1 es el nombre del contenedor. Esta direccion estara expuesta de forma interna en el contenedor de kafka
      # Por lo tanto no necesita ser especificado en la configuracion de ports:
      # ----------------------------------------------------------------------------------------------
      # EXTERNAL: Para la comunicacion de clientes fuera de la red de docker 
      # (${DOCKER_HOST_IP:-127.0.0.1}:9092) - Significa que la direccion IP sera en en el Docker host IP o 127.0.0.1 en caso de que la IP de docker no este definida 
      # En la puerto 9092
      # ----------------------------------------------------------------------------------------------
      # DOCKER: Para la comunicacion con clientes que tambien estan dentro de docker 
      # (host.docker.internal:29092) - host.docker.internal es un DNS especial que se traduce a la direccion del docker
      # En el puerto 29092
      # ----------------------------------------------------------------------------------------------
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 
      # Define la encryptacion que debe de tener el contenedor segun la conexion
      # Si esta en PLAINTEXT significa que los datos NO estaran encryptados
      # (INSEGURO)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      # El listener que el contenedor utilizara para comunicarse con otros brokers en el cluster
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      # El ID del broker (DEBE DE SER UNICO)
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1


  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka2
    container_name: kafka2
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1


  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka3
    container_name: kafka3
    ports:
      - "9094:9094"
      - "29094:29094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094,DOCKER://host.docker.internal:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

